# Copyright (c) 2009-2010 Satoshi Nakamoto
# Rewritten for Archlinux by shahid
# Adapted for CUDA by Artefact2 using eurekafag's makefile
# Distributed under the MIT/X11 software license, see the accompanying
# file license.txt or http://www.opensource.org/licenses/mit-license.php.


INCLUDEPATHS= \
 -I"/usr/include" \

LIBPATHS= \
 -L"/usr/lib" \
 -L"/usr/local/lib"

LIBS= \
 -Wl,-Bstatic \
   -l boost_system \
   -l boost_filesystem \
   -l boost_program_options \
   -l boost_thread \
   -l db_cxx \
   -l crypto \
 -Wl,-Bdynamic \
   -l gthread-2.0 \
   -l z \
 ${LDFLAGS}

DEBUGFLAGS=-g -D__WXDEBUG__
CCFLAGS=${CXXFLAGS} -Wno-invalid-offsetof -Wformat $(WXDEFS) $(INCLUDEPATHS)
HEADERS=headers.h strlcpy.h serialize.h uint256.h util.h key.h bignum.h base58.h \
    script.h db.h net.h irc.h main.h rpc.h uibase.h ui.h noui.h init.h

CUDAROOT = "/usr/share/cuda-sdk"

CUDALIBPATHS= \
 -L$(CUDAROOT)/C/lib \
 -L$(CUDAROOT)/C/common/lib/linux \
 -L$(CUDAROOT)/shared/lib

CUDALIBS= -lcudart

CUDAFLAGS=-fPIC -Xlinker -rpath /usr/local/cuda/lib $(CUDALIBPATHS) $(CUDALIBS)

OBJS= \
    obj/sha256_kernel.cuo \
    obj/util.o \
    obj/script.o \
    obj/db.o \
    obj/net.o \
    obj/irc.o \
    obj/main.o \
    obj/rpc.o \
    obj/init.o \
    cryptopp/obj/sha.o \
    obj/sha256.o \
    cryptopp/obj/cpu.o


all: bitcoin


obj/nogui/sha256.o: sha256.cpp
	g++ -c $(CFLAGS) -O3 -o $@ $<

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -DGUI -o $@ $<

cryptopp/obj/%.o: cryptopp/%.cpp
	g++ -c $(CFLAGS) -O3 -o $@ $<

bitcoin: $(OBJS) obj/ui.o obj/uibase.o obj/sha256.o
	g++ $(CFLAGS) -o $@ $^ $(WXLIBS) $(LIBS) $(CUDALIBPATHS) $(CUDALIBS)


obj/nogui/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

obj/nogui/%.cuo: %.cu	    
	    nvcc  --compiler-bindir=/opt/gcc-4.4 -gencode=arch=compute_10,code=\"sm_10,compute_10\" -gencode=arch=compute_20,code=\"sm_20,compute_20\" --compiler-options -fpermissive --compiler-options -fno-strict-aliasing -I. -I/usr/include/cuda -I$(CUDAROOT)/C/common/inc -I$(CUDAROOT)/shared/inc -DUNIX -O3 -o $@ -c $<

obj/%.cuo: %.cu
	    nvcc  --compiler-bindir=/opt/gcc-4.4 -gencode=arch=compute_10,code=\"sm_10,compute_10\" -gencode=arch=compute_20,code=\"sm_20,compute_20\" --compiler-options -fpermissive --compiler-options -fno-strict-aliasing -I. -I/usr/include/cuda -I$(CUDAROOT)/C/common/inc -I$(CUDAROOT)/shared/inc -DUNIX -O3 -o $@ -c $<

bitcoind: $(OBJS:obj/%=obj/nogui/%)
	g++ $(CFLAGS) -o $@ $^ $(LIBS) $(CUDALIBPATHS) $(CUDALIBS)


clean:
	-rm -f obj/*.o
	-rm -f obj/nogui/*.o
	-rm -f cryptopp/obj/*.o
	-rm -f headers.h.gch
